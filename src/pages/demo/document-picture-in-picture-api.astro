---
import LayoutDemo from '@/layouts/LayoutDemo.astro';
---

<LayoutDemo title="Document Picture-in-Picture API">
  <div class="wrapper">
    <h1><a href="/demo/">demo</a> &raquo; Document Picture-in-Picture API</h1>

    <div id="playerContainer">
      <div id="player">
        <h2 class="title">Document Picture-in-Picture Video</h2>
        <video id="video" controls="" autoplay playsinline muted>
          <source
            src="https://ia804502.us.archive.org/33/items/GoldenGa1939_3/GoldenGa1939_3_512kb.mp4"
            type="video/mp4"
          />
        </video>
        <p class="text">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt
          ut labore et dolore magna aliqua.
        </p>
      </div>
    </div>
    <button id="pipButton">Open Picture-in-Picture window</button>
  </div>
</LayoutDemo>

<script>
  const pipButton = document.querySelector('#pipButton') as HTMLButtonElement;

  pipButton.addEventListener('click', async () => {
    if (!('documentPictureInPicture' in window)) {
      alert('ピクチャーインピクチャーはサポートされていません');
      return;
    }

    // ピクチャーインピクチャーウィンドウを開く
    const pipWindow = await documentPictureInPicture.requestWindow({
      // ピクチャーインピクチャーウィンドウのサイズを設定する
      width: 320,
      height: 480,
    });

    // ピクチャーインピクチャーウィンドウにスタイルシートをコピーする
    [...document.styleSheets].forEach((styleSheet) => {
      try {
        const cssRules = [...styleSheet.cssRules].map((rule) => rule.cssText).join('');
        const style = document.createElement('style');

        style.textContent = cssRules;
        pipWindow.document.head.appendChild(style);
      } catch (e) {
        const link = document.createElement('link');

        link.rel = 'stylesheet';
        link.type = styleSheet.type;
        link.media = styleSheet.media;
        link.href = styleSheet.href;
        pipWindow.document.head.appendChild(link);
      }
    });

    const player = document.querySelector('#player') as HTMLDivElement;
    pipButton.classList.add('is-hide');
    pipWindow.document.body.append(player);

    // ピクチャーインピクチャーウィンドウが閉じられたときの処理
    pipWindow.addEventListener('pagehide', (event) => {
      const playerContainer = document.querySelector('#playerContainer') as HTMLDivElement;
      const pipPlayer = event.target.querySelector('#player');
      playerContainer.append(pipPlayer);
      pipButton.classList.remove('is-hide');
    });
  });
</script>

<style>
  h1 {
    padding: 20px;
    margin: 0;
  }

  #pipButton.is-hide {
    display: none;
  }

  .text {
    display: none;
  }

  @media all and (display-mode: picture-in-picture) {
    h2 {
      color: tomato;
    }

    video {
      width: 100%;
      height: 100%;
    }

    .text {
      display: block;
    }
  }
</style>

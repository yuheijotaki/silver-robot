---
import type { MarkdownHeading } from 'astro';

interface Props {
  headings: MarkdownHeading[];
}

type HeadingWithSubheadings = MarkdownHeading & {
  subheadings: MarkdownHeading[];
};

const { headings } = Astro.props;

const groupedHeadings = headings.reduce((array, heading) => {
  if (heading.depth === 2) {
    array.push({ ...heading, subheadings: [] });
  } else if (heading.depth === 3) {
    array.at(-1)?.subheadings.push(heading);
  }
  return array;
}, [] as HeadingWithSubheadings[]);
---

<details>
  <summary>目次</summary>
  <nav aria-label="目次">
    <ol>
      {
        groupedHeadings.map((h) => (
          <li>
            <a href={`#${h.slug}`}>{h.text}</a>
            {h.subheadings.length > 0 && (
              <ol>
                {h.subheadings.map((sub) => (
                  <li>
                    <a href={`#${sub.slug}`}>{sub.text}</a>
                  </li>
                ))}
              </ol>
            )}
          </li>
        ))
      }
    </ol>
  </nav>
</details>

<style lang="scss">
  @use '@/styles/variables' as var;
  @use '@/styles/extension' as *;

  li {
    list-style-type: disc;

    li {
      list-style-type: circle;
    }
  }
</style>
